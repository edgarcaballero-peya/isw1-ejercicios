

----STARTUP---- (21 June 2021 20:49:58) as /Users/edgardo.mosqueira/Desktop/ISW/CuisUniversity/CuisUniversity-4532.image!


!classRemoval: #CreditCard stamp: 'ERMC 6/21/2021 20:50:13'!
Object subclass: #CreditCard
	instanceVariableNames: 'creditCardNumber creditCardOwner creditCardExpiration'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ERMC 6/21/2021 20:50:13'!
Object subclass: #Cashier
	instanceVariableNames: 'salesBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ERMC 6/21/2021 20:50:13'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ERMC 6/21/2021 20:50:13'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today validBook aValidCreditCard anExpiredCreditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ERMC 6/21/2021 20:50:14'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of /Users/edgardo.mosqueira/Desktop/ISW/z-repo-catedra-2021-1c/20-TusLibros/Iteracion2/TusLibros-33.st----!

----QUIT----(22 June 2021 10:22:31) CuisUniversity-4532.image priorSource: 18463199!

----STARTUP---- (22 June 2021 19:29:00) as /Users/edgardo.mosqueira/Desktop/ISW/CuisUniversity/CuisUniversity-4532.image!


TestCase subclass: #XXXTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #XXXTest category: 'TusLibros' stamp: 'ERMC 6/22/2021 19:36:24'!
TestCase subclass: #XXXTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/22/2021 20:10:39'!
Object subclass: #TusLibros
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XXXTest methodsFor: 'nil' stamp: 'ERMC 6/22/2021 20:10:26'!
test01_createCartWithValidUserIdAndPassword

	| cart user |
	user _ self createUserWithPassword.
	 
	cart _ TusLibros createCartFor: user.
	! !

!classDefinition: #XXXTest category: 'TusLibros' stamp: 'ERMC 6/22/2021 20:14:50'!
TestCase subclass: #XXXTest
	instanceVariableNames: 'testObjectsFactory tusLibros'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XXXTest methodsFor: 'nil' stamp: 'ERMC 6/22/2021 20:14:45'!
setup
	
	tusLibros _ TusLibros 
		usersAndPasswords: self defaultUsersAndPaswords
		acceptingItemsOf: self defaultCatalog
		registeringOn: self defaultSalesBook! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:15:08'!
defaultUsersAndPaswords
! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:17:23'!
defaultCatalog
	
	| storeTestObjectsFactory |
	storeTestObjectsFactory _ StoreTestObjectsFactory  new.
	
 	^storeTestObjectsFactory defaultCatalog ! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:17:27' prior: 50909272!
defaultCatalog
	
	| storeTestObjectsFactory |
	
	storeTestObjectsFactory _ StoreTestObjectsFactory  new.
	
 	^storeTestObjectsFactory defaultCatalog ! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:19:12'!
defaultSalesBook

	^Dictionary new.! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:19:49' prior: 50909268!
defaultUsersAndPaswords

	| usersAndPassword |
	usersAndPassword _ Dictionary new.
	

! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:22:54' prior: 50909293!
defaultUsersAndPaswords

	| usersAndPassword |
	
	usersAndPassword _ Dictionary new.
	
	usersAndPassword add: 'Pepe'->'Isw123';
					add: 'Ed'->'libertad2';
					add: 'Sabri'->'12345';
					yourself 

! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:23:04' prior: 50909299!
defaultUsersAndPaswords

	| usersAndPassword |
	
	usersAndPassword _ Dictionary new.
	
	usersAndPassword add: 'Pepe'->'Isw123';
					add: 'Ed'->'libertad2';
					add: 'Sabri'->'12345';
					yourself.

	^ usersAndPassword ! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:23:42' prior: 50909309!
defaultUsersAndPaswords

	| usersAndPassword |
	
	usersAndPassword _ Dictionary new.
	
	usersAndPassword add: 'Pepe'->'Isw123';
					add: 'Ed'->'libertad2';
					yourself.

	^ usersAndPassword ! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:26:56' prior: 50909246!
test01_createCartWithValidUserIdAndPassword

	| cart |
	
	cart _ tusLibros createCartFor: 'Pepe' withPassword: 'Isw123' .
	! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:28:57' prior: 50909329!
test01_createCartWithValidUserIdAndPassword

	| cart |
	
	cart _ tusLibros createCartFor: 'Pepe' withPassword: 'Isw123' .
	! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:32:16' prior: 50909336!
test01_createCartWithValidUserIdAndPassword

	| cartId |
	
	cartId _ tusLibros createCartFor: 'Pepe' withPassword: 'Isw123'.
	
	self assert: (tusLibros listCartById: cartId) isEmpty.
	! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:32:22'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:32:48'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:32:53'!
ERROR!
!TusLibros class methodsFor: 'nil' stamp: 'ERMC 6/22/2021 20:34:14'!
usersAndPasswords: usersAndPasswords 	acceptingItemsOf:  aCatalog 		registeringOn: aSalesBook
	
	^self new InitializeWithUsersAndPasswords: usersAndPasswords acceptingItemsOf: aCatalog registeringOn: aSalesBook! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:34:23'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:34:23'!
ERROR!

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/22/2021 20:35:58'!
Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/22/2021 20:35:59'!
Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/22/2021 20:36:00'!
Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords catalog salesBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibros methodsFor: 'nil' stamp: 'ERMC 6/22/2021 20:35:56'!
InitializeWithUsersAndPasswords: XusersAndPasswords acceptingItemsOf: aCatalog registeringOn: aSalesBook

	usersAndPasswords  _ XusersAndPasswords.
	catalog _ aCatalog.
	salesBook _ aSalesBook.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:37:55' prior: 50909399!
InitializeWithUsersAndPasswords: XusersAndPasswords acceptingItemsOf: aCatalog registeringOn: aSalesBook

	usersAndPasswords  _ XusersAndPasswords.
	catalog _ aCatalog.
	salesBook _ aSalesBook.! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:37:59'!
ERROR!
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:38:09' overrides: 16927572!
setUp
	
	tusLibros _ TusLibros 
		usersAndPasswords: self defaultUsersAndPaswords
		acceptingItemsOf: self defaultCatalog
		registeringOn: self defaultSalesBook! !

!methodRemoval: XXXTest #setup stamp: 'ERMC 6/22/2021 20:38:12'!
setup
	
	tusLibros _ TusLibros 
		usersAndPasswords: self defaultUsersAndPaswords
		acceptingItemsOf: self defaultCatalog
		registeringOn: self defaultSalesBook!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:38:15'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:38:15'!
ERROR!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/22/2021 20:38:27'!
createCartFor: aString withPassword: aString2 
	self shouldBeImplemented.! !

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/22/2021 20:46:34'!
Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords catalog salesBook carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/22/2021 20:46:28' prior: 50909443!
createCartFor: anUser withPassword: aPassword
	
	| cart |
	cart _ Cart acceptingItemsOf: catalog.
	
	carts at: 0 put: cart.
	
	^0 ! !
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/22/2021 20:46:37' prior: 50909456!
createCartFor: anUser withPassword: aPassword
	
	| cart |
	
	cart _ Cart acceptingItemsOf: catalog.
	
	carts at: 0 put: cart.
	
	^0 ! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:46:38'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:46:48'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:47:13' prior: 50909409!
InitializeWithUsersAndPasswords: XusersAndPasswords acceptingItemsOf: aCatalog registeringOn: aSalesBook

	usersAndPasswords  _ XusersAndPasswords.
	catalog _ aCatalog.
	salesBook _ aSalesBook.
	carts _ Dictionary new.! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:47:17'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:47:17'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:47:22'!
listCartById: aSmallInteger 
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:49:12' prior: 50909494!
listCartById: anId
	
	(carts at: 0) listItems

	! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:50:13' prior: 50909499!
listCartById: anId
	
	| cart |
	cart _ carts at: 0  ifAbsent: [^'carts is empty'].
	^cart listItems.

	! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:50:16'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:50:20'!
listItems
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:50:29' prior: 50909513!
listItems

	^items .! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:50:30'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 20:50:35'!
PASSED!
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:57:43'!
test02_CanNotCreateACartWithInvalidUser

	
	
	self 
		should: [tusLibros createCartFor: 'Wilkinson' withPassword: '1234'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: tusLibros invalidUserPasswordErrorDescription equals: anError messageText.
			self assert: tusLibros carts isEmpty]
	
	

	! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 20:57:50' prior: 50909528!
test02_CanNotCreateACartWithInvalidUser

	self 
		should: [tusLibros createCartFor: 'Wilkinson' withPassword: '1234'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: tusLibros invalidUserPasswordErrorDescription equals: anError messageText.
			self assert: tusLibros carts isEmpty]
	
	

	! !

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 20:58:18'!
FAILURE!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 20:59:29'!
FAILURE!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/22/2021 21:03:51' prior: 50909463!
createCartFor: anUser withPassword: aPassword
	
	| cart |
	
	usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserPasswordErrorDescription].
	
	cart _ Cart acceptingItemsOf: catalog.
	
	carts at: 0 put: cart.
	
	^0 ! !

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:03:52'!
ERROR!
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/22/2021 21:04:07'!
invalidUserPasswordErrorDescription
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/22/2021 21:05:34' prior: 50909575!
invalidUserPasswordErrorDescription
	
	^ 'the user is not valid. Please Sign up'! !

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:05:35'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:05:40'!
carts
	self shouldBeImplemented.
	^carts! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:05:44' prior: 50909589!
carts

	^carts! !

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:05:46'!
FAILURE!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:06:39'!
FAILURE!

self carts. !

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:07:51'!
FAILURE!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:08:12'!
FAILURE!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:11:38'!
PASSED!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:12:14'!
assertUserValid: anUser

	usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserPasswordErrorDescription].
	! !
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/22/2021 21:12:25' prior: 50909562!
createCartFor: anUser withPassword: aPassword
	
	| cart |
	
	self assertUserValid: anUser. 
		
	cart _ Cart acceptingItemsOf: catalog.
	
	carts at: 0 put: cart.
	
	^0 ! !

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:12:28'!
PASSED!
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:13:38'!
test03_CanNotCreateACartWithValidUserButIncorrectPassword

	self 
		should: [tusLibros createCartFor: 'Pepe' withPassword: '1234'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: tusLibros invalidUserPasswordErrorDescription equals: anError messageText.
			self assert: tusLibros carts isEmpty]
	
	

	! !

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:13:40'!
FAILURE!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/22/2021 21:14:12' prior: 50909621!
createCartFor: anUser withPassword: aPassword
	
	| cart |
	
	self assertUserValid: anUser. 
	self assertUserPasswordValid: aPassword.
		
	cart _ Cart acceptingItemsOf: catalog.
	
	carts at: 0 put: cart.
	
	^0 ! !

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:14:14'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:14:20'!
assertUserPasswordValid: aString 
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:17:50'!
assertUser: anUser withPasswordValid: aPassword 
	
	| password |
	password _ usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserPasswordErrorDescription].
	
	(aPassword = password) ifFalse: [^self error: self invalidPasswordErrorDescription]! !
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/22/2021 21:18:10'!
invalidUserErrorDescription
	
	^ 'the user is not valid. Please Sign up'! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:18:10' prior: 50909668!
assertUser: anUser withPasswordValid: aPassword 
	
	| password |
	password _ usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserErrorDescription].
	
	(aPassword = password) ifFalse: [^self error: self invalidPasswordErrorDescription]! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:18:10' prior: 50909614!
assertUserValid: anUser

	usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserErrorDescription].
	! !

!methodRemoval: TusLibros #invalidUserPasswordErrorDescription stamp: 'ERMC 6/22/2021 21:18:10'!
invalidUserPasswordErrorDescription
	
	^ 'the user is not valid. Please Sign up'!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:18:16' prior: 50909685!
assertUser: anUser withPasswordValid: aPassword 
	
	| password |
	password _ usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserErrorDescription].
	
	(aPassword = password) ifFalse: [^self error: self invalidUserPasswordErrorDescription]! !

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:18:23'!
ERROR!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:18:23'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:18:30'!
invalidUserPasswordErrorDescription
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:18:50' prior: 50909728!
invalidUserPasswordErrorDescription
	
	^'invalid password. Please check again' ! !

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:18:51'!
FAILURE!

!methodRemoval: TusLibros #assertUserValid: stamp: 'ERMC 6/22/2021 21:19:22'!
assertUserValid: anUser

	usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserErrorDescription].
	!

!methodRemoval: TusLibros #assertUserPasswordValid: stamp: 'ERMC 6/22/2021 21:19:35'!
assertUserPasswordValid: aString 
	self shouldBeImplemented.!
!TusLibros methodsFor: 'assertions' stamp: 'ERMC 6/22/2021 21:19:50' prior: 50909709!
assertUser: anUser withPasswordValid: aPassword 
	
	| password |
	password _ usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserErrorDescription].
	
	(aPassword = password) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
	! !
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/22/2021 21:20:30' prior: 50909650!
createCartFor: anUser withPassword: aPassword
	
	| cart |
	
	self assertUser: anUser withPasswordValid: aPassword.
		
	cart _ Cart acceptingItemsOf: catalog.
	
	carts at: 0 put: cart.
	
	^0 ! !

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:20:37'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:20:40'!
FAILURE!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:20:40'!
FAILURE!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:20:57'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:20:59'!
FAILURE!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:20:59'!
FAILURE!
!TusLibros methodsFor: 'assertions' stamp: 'ERMC 6/22/2021 21:22:58' prior: 50909754!
assertUser: anUser withPasswordValid: aPassword 
	
	| password |
	
	password _ usersAndPasswords at: anUser ifAbsent: [^self error: self invalidUserErrorDescription].
	
	(aPassword = password) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
	! !

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:23:33'!
FAILURE!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:23:33'!
FAILURE!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:24:01'!
FAILURE!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/22/2021 21:28:49' prior: 50909765!
createCartFor: anUser withPassword: aPassword
	
	| cart |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
		
	cart _ Cart acceptingItemsOf: catalog.
	
	carts at: 0 put: cart.
	
	^0 ! !
!TusLibros methodsFor: 'assertions' stamp: 'ERMC 6/22/2021 21:29:01' prior: 50909794!
assertUser: anUser withPasswordValid: aPassword 
	
	| password |
	
	password _ usersAndPasswords at: anUser ifAbsent: [^false].
	
	(aPassword = password) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
	! !
!TusLibros methodsFor: 'assertions' stamp: 'ERMC 6/22/2021 21:29:04' prior: 50909826!
assertUser: anUser withPasswordValid: aPassword 
	
	| password |
	
	password _ usersAndPasswords at: anUser ifAbsent: [^false].
	
	^(aPassword = password) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
	! !

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:29:09'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:29:11'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:31:13'!
ERROR!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:31:13'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:31:13'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:31:13'!
ERROR!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:31:18'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:31:20'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:31:22'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:31:22'!
ERROR!
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:32:25'!
validUser

	^ 'Pepe'! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:32:59'!
invalidUser

	^ 'Wilkinson'! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:33:18' prior: 50909343!
test01_createCartWithValidUserIdAndPassword

	| cartId |
	
	cartId _ tusLibros createCartFor: self validUser withPassword: 'Isw123'.
	
	self assert: (tusLibros listCartById: cartId) isEmpty.
	! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:33:37'!
validPassword
 
	^'Isw123'.

	! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:33:47'!
invalidPassword
 
	^'123'.

	! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:33:58' prior: 50909888!
test01_createCartWithValidUserIdAndPassword

	| cartId |
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	self assert: (tusLibros listCartById: cartId) isEmpty.
	! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:34:01'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:34:01'!
ERROR!
!TusLibros methodsFor: 'assertions' stamp: 'ERMC 6/22/2021 21:34:35' prior: 50909836!
assertUser: anUser withPasswordValid: aPassword 
	
	| password |
	
	password _ usersAndPasswords at: anUser ifAbsent: [^false].
	
	^(aPassword = password)
	! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:34:36'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:34:39'!
PASSED!
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:34:55' prior: 50909542!
test02_CanNotCreateACartWithInvalidUser

	self 
		should: [tusLibros createCartFor: self invalidUser withPassword: self validPassword]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: tusLibros invalidUserPasswordErrorDescription equals: anError messageText.
			self assert: tusLibros carts isEmpty]
	
	

	! !
!XXXTest methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:35:18' prior: 50909632!
test03_CanNotCreateACartWithValidUserButIncorrectPassword

	self 
		should: [tusLibros createCartFor: self validUser withPassword: self invalidPassword .]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: tusLibros invalidUserPasswordErrorDescription equals: anError messageText.
			self assert: tusLibros carts isEmpty]
	
	

	! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:35:21'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:35:21'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:35:21'!
PASSED!
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 21:46:39'!
test04_CanNotAddAnItemInACartThatIsNotInTusLibros
	
	| invalidCartId |
	invalidCartId _ 1.
	
	self 
		should: [tusLibros addTocartId: invalidCartId bookIsbn: 'The ring' andQuantity: 1]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros canNotAddItemsOfABookToInvalidCartErrorDescription]
		
		! !

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:46:44'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:46:49'!
addTocartId: aSmallInteger bookIsbn: aString andQuantity: aSmallInteger3 
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:48:54' prior: 50909992!
addTocartId: cartId bookIsbn: anIsbn andQuantity: anInt
	
	self assertCartId: cartId.
	
	 
! !

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:48:57'!
ERROR!
!TusLibros methodsFor: 'assertions' stamp: 'ERMC 6/22/2021 21:49:04'!
assertCartId: aSmallInteger 
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'assertions' stamp: 'ERMC 6/22/2021 21:50:13' prior: 50910008!
assertCartId: anId 
	
	carts at: anId ifAbsent: [^false].
	^true! !

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:50:14'!
FAILURE!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:51:10' prior: 50909999!
addTocartId: cartId bookIsbn: anIsbn andQuantity: anInt
	
	(self assertCartId: cartId) ifFalse: [^self error: self canNotAddItemsOfABookToInvalidCartErrorDescription].
	
	 
! !

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:51:11'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:51:14'!
canNotAddItemsOfABookToInvalidCartErrorDescription
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:51:37' prior: 50910034!
canNotAddItemsOfABookToInvalidCartErrorDescription

	^' can not add items of a book to an ivalid cart'! !

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:51:38'!
ERROR!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:51:43'!
ERROR!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:51:43'!
ERROR!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:52:25'!
ERROR!
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 21:52:44' prior: 50909975!
test04_CanNotAddAnItemInACartThatIsNotInTusLibros
	
	| invalidCartId |
	invalidCartId _ 1.
	
	self 
		should: [tusLibros addTocartId: invalidCartId bookIsbn: 'The ring' andQuantity: 1]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros canNotAddItemsOfABookToInvalidCartErrorDescription equals: anError messageText]
		
		! !

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:52:46'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 21:52:46'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 21:52:46'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 21:52:46'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 21:52:46'!
PASSED!
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 21:57:40'!
test05_CanNotAddItemThatIsNotInTheEditorialISBN
	
	| invalidBook cartId |
	
	invalidBook _ 'invalid book'.
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	self 
		should: [tusLibros addTocartId: cartId bookIsbn: invalidBook andQuantity: 1]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros canNotAddItemsOfABookToInvalidCartErrorDescription equals: anError messageText]
		
		! !
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 21:58:51' prior: 50910093!
test05_CanNotAddItemThatIsNotInTheEditorialISBN
	
	| invalidBook cartId |
	
	invalidBook _ 'invalid book'.
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	self 
		should: [tusLibros addTocartId: cartId bookIsbn: invalidBook andQuantity: 1]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros invalidBookISBNErrorDescription equals: anError messageText.
			self assert: (tusLibros listCartById: cartId) isEmpty]
		
		! !

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/22/2021 21:58:54'!
FAILURE!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:59:42' prior: 50910022!
addTocartId: cartId bookIsbn: anIsbn andQuantity: anInt
	
	(self assertCartId: cartId) ifFalse: [^self error: self canNotAddItemsOfABookToInvalidCartErrorDescription].
	(self assertBookIsbn: anIsbn) ifFalse: [^self error: self invalidBookISBNErrorDescription]
	
	 
! !

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/22/2021 21:59:46'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 21:59:49'!
assertBookIsbn: aString 
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 22:00:45' prior: 50910149!
assertBookIsbn: anISBN
	
	catalog at: anISBN ifAbsent: [^false].
	^true
	
	! !

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/22/2021 22:00:46'!
ERROR!
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/22/2021 22:00:54'!
invalidBookISBNErrorDescription
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/22/2021 22:01:11' prior: 50910162!
invalidBookISBNErrorDescription
	
	^' the book isbn is not in the catalog' ! !

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/22/2021 22:01:12'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 22:01:12'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 22:01:12'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 22:01:12'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 22:01:12'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/22/2021 22:01:12'!
PASSED!
!TusLibros methodsFor: 'assertions' stamp: 'ERMC 6/22/2021 22:02:40'!
assertId: anId on: aContent
	
	aContent at: anId ifAbsent: [^false].
	^true! !

!methodRemoval: TusLibros #assertCartId: stamp: 'ERMC 6/22/2021 22:02:44'!
assertCartId: anId 
	
	carts at: anId ifAbsent: [^false].
	^true!

!methodRemoval: TusLibros #assertBookIsbn: stamp: 'ERMC 6/22/2021 22:02:50'!
assertBookIsbn: anISBN
	
	catalog at: anISBN ifAbsent: [^false].
	^true
	
	!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 22:03:29' prior: 50910134!
addTocartId: cartId bookIsbn: anIsbn andQuantity: anInt
	
	(self assertId: cartId on: carts) ifFalse: [^self error: self canNotAddItemsOfABookToInvalidCartErrorDescription].
	(self assertId: anIsbn on: catalog) ifFalse: [^self error: self invalidBookISBNErrorDescription]
	
	 
! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 22:03:31'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 22:03:31'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 22:03:31'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 22:03:31'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/22/2021 22:03:31'!
PASSED!
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 22:06:57'!
test06_CanAdddItemsToAValidCartCreated
	
	| invalidBook cartId |
	
	invalidBook _ 'valid book'.
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	self 
		should: [tusLibros addTocartId: cartId bookIsbn: invalidBook andQuantity: 1]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros invalidBookISBNErrorDescription equals: anError messageText.
			self assert: (tusLibros listCartById: cartId) isEmpty]
		
		! !
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 22:09:05' prior: 50910237!
test06_CanAdddItemsToAValidCartCreated
	
	| validBook cartId |
	
	validBook _ 'validBook'.
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.

	tusLibros addTocartId: cartId bookIsbn: validBook andQuantity: 1.
	
	self deny: (tusLibros listCartById: cartId) isEmpty .
		! !

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/22/2021 22:09:07'!
FAILURE!
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 22:10:04' prior: 50910256!
test06_CanAdddItemsToAValidCartCreated
	
	| validBook cartId |
	
	validBook _ 'validBook'.
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.

	tusLibros addTocartId: cartId bookIsbn: validBook andQuantity: 1.
	
	self deny: (tusLibros listCartById: cartId) isEmpty.
	self assert: (tusLibros listCartById: cartId) 
		! !
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 22:11:01' prior: 50910272!
test06_CanAdddItemsToAValidCartCreated
	
	| validBook cartId |
	
	validBook _ 'validBook'.
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.

	tusLibros addTocartId: cartId bookIsbn: validBook andQuantity: 1.
	
	self assert: ((tusLibros listCartById: cartId) occurrencesOf: validBook)
		! !

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/22/2021 22:11:02'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 22:11:51' prior: 50910208!
addTocartId: cartId bookIsbn: anIsbn andQuantity: anInt
	
	| cart |
	(self assertId: cartId on: carts) ifFalse: [^self error: self canNotAddItemsOfABookToInvalidCartErrorDescription].
	(self assertId: anIsbn on: catalog) ifFalse: [^self error: self invalidBookISBNErrorDescription].
	
	cart _ carts  at: cartId. 
	
	^cart
	
	 
! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 22:12:49' prior: 50910304!
addTocartId: cartId bookIsbn: anIsbn andQuantity: aQuantity
	
	| cart |
	(self assertId: cartId on: carts) ifFalse: [^self error: self canNotAddItemsOfABookToInvalidCartErrorDescription].
	(self assertId: anIsbn on: catalog) ifFalse: [^self error: self invalidBookISBNErrorDescription].
	
	cart _ carts  at: cartId. 
		
	cart add: aQuantity of: anIsbn.
	
	^cart
	
	 
! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/22/2021 22:13:05' prior: 50910318!
addTocartId: cartId bookIsbn: anIsbn andQuantity: aQuantity
	
	| cart |
	(self assertId: cartId on: carts) ifFalse: [^self error: self canNotAddItemsOfABookToInvalidCartErrorDescription].
	(self assertId: anIsbn on: catalog) ifFalse: [^self error: self invalidBookISBNErrorDescription].
	
	cart _ carts at: cartId. 
		
	cart add: aQuantity of: anIsbn.
	
	^cart
	
	 
! !

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/22/2021 22:13:55'!
ERROR!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/22/2021 22:14:39'!
ERROR!
!XXXTest methodsFor: 'tests - creating cart' stamp: 'ERMC 6/22/2021 22:15:17' prior: 50910287!
test06_CanAdddItemsToAValidCartCreated
	
	| validBook cartId |
	
	validBook _ 'validBook'.
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.

	tusLibros addTocartId: cartId bookIsbn: validBook andQuantity: 1.
	
	self assert: ((tusLibros listCartById: cartId) occurrencesOf: validBook) equals: 1
		! !

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/22/2021 22:15:18'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 22:15:18'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 22:15:18'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 22:15:18'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 22:15:18'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/22/2021 22:15:18'!
PASSED!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/22/2021 22:15:18'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ERMC 6/22/2021 22:16:09'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ERMC 6/22/2021 22:16:09'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ERMC 6/22/2021 22:16:09'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/22/2021 22:16:10'!
PASSED!

----QUIT----(22 June 2021 22:16:24) CuisUniversity-4532.image priorSource: 18482255!

----STARTUP---- (23 June 2021 19:27:38) as /Users/edgardo.mosqueira/Desktop/ISW/CuisUniversity/CuisUniversity-4532.image!

!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 19:50:08'!
test07_ListingAnEmptyCartReturnsEmptyList
	
	| validBook cartId |
	
	validBook _ 'validBook'.
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	self assert: (tusLibros listCartBy: cartId) isEmpty.
		! !
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 19:50:18' prior: 50910464!
test07_ListingAnEmptyCartReturnsEmptyList
	
	| cartId |
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	self assert: (tusLibros listCartBy: cartId) isEmpty.
		! !

!testRun: #XXXTest #test07_ListingAnEmptyCartReturnsEmptyList stamp: 'ERMC 6/23/2021 19:50:25'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 19:50:34'!
listCartBy: aSmallInteger 
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 19:53:38' prior: 50910488!
listCartBy: aCartId
	
	| cart |
	cart _ 	carts at: aCartId.
	^cart listItems.


	! !

!testRun: #XXXTest #test07_ListingAnEmptyCartReturnsEmptyList stamp: 'ERMC 6/23/2021 19:53:41'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 19:53:41'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/23/2021 19:53:41'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/23/2021 19:53:41'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/23/2021 19:53:41'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/23/2021 19:53:41'!
PASSED!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/23/2021 19:53:41'!
PASSED!

!testRun: #XXXTest #test07_ListingAnEmptyCartReturnsEmptyList stamp: 'ERMC 6/23/2021 19:53:41'!
PASSED!

!methodRemoval: TusLibros #listCartBy: stamp: 'ERMC 6/23/2021 19:54:41'!
listCartBy: aCartId
	
	| cart |
	cart _ 	carts at: aCartId.
	^cart listItems.


	!
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 19:54:49' prior: 50910475!
test07_ListingAnEmptyCartReturnsEmptyList
	
	| cartId |
	
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	self assert: (tusLibros listCartById: cartId) isEmpty.
		! !

!testRun: #XXXTest #test07_ListingAnEmptyCartReturnsEmptyList stamp: 'ERMC 6/23/2021 19:54:50'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 19:54:50'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/23/2021 19:54:50'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/23/2021 19:54:50'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/23/2021 19:54:50'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/23/2021 19:54:50'!
PASSED!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/23/2021 19:54:50'!
PASSED!

!testRun: #XXXTest #test07_ListingAnEmptyCartReturnsEmptyList stamp: 'ERMC 6/23/2021 19:54:50'!
PASSED!
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 19:59:16'!
test08_CanNotListACartItemsOfAnInvalidCartId
	
	self 
		should: [tusLibros listCartById: 'invalidBook'] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros invalidBookISBNErrorDescription equals: anError messageText]! !

!testRun: #XXXTest #test08_CanNotListACartItemsOfAnInvalidCartId stamp: 'ERMC 6/23/2021 19:59:17'!
FAILURE!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 19:59:53' prior: 50909504!
listCartById: anId
	
	| cart |
	cart _ carts at: 0  ifAbsent: [^self error: self invalidBookISBNErrorDescription].
	^cart listItems.

	! !

!testRun: #XXXTest #test08_CanNotListACartItemsOfAnInvalidCartId stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!

!testRun: #XXXTest #test07_ListingAnEmptyCartReturnsEmptyList stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!

!testRun: #XXXTest #test08_CanNotListACartItemsOfAnInvalidCartId stamp: 'ERMC 6/23/2021 19:59:56'!
PASSED!
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'ERMC 6/23/2021 20:07:43' prior: 50909189!
defaultCatalog
	
	^ Dictionary new
		at: self itemSellByTheStore put: self itemSellByTheStorePrice;
		at: self item2SellByTheStore put: self item2SellByTheStorePrice
		yourself ! !
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'ERMC 6/23/2021 20:08:08'!
item2SellByTheStore 

	^'validBook2'! !
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'ERMC 6/23/2021 20:08:20'!
item2SellByTheStorePrice
	
	^10! !
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 20:10:18'!
test09_ListingCartOfValidCartIdReturnsCorrectItems
	
	| cartId expectedItems |
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	tusLibros addTocartId: cartId bookIsbn: 'validBook' andQuantity: 1.
	tusLibros addTocartId: cartId bookIsbn: 'validBook2' andQuantity: 1.
	
	expectedItems _ tusLibros listCartById: cartId.
	
	self assert: (expectedItems)! !
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 20:11:04' prior: 50910638!
test09_ListingCartOfValidCartIdReturnsCorrectItems
	
	| cartId expectedItems |
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	
	tusLibros addTocartId: cartId bookIsbn: 'validBook' andQuantity: 1.
	tusLibros addTocartId: cartId bookIsbn: 'validBook2' andQuantity: 1.
	
	expectedItems _ tusLibros listCartById: cartId.
	
	self assert: (expectedItems occurrencesOf: 'validBook') equals: 1.
	self assert: (expectedItems occurrencesOf: 'validBook2') equals: 1.! !

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:11:06'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:11:39'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:11:55'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:12:26'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:12:36'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:12:51'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:17:11'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:17:11'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'ERMC 6/23/2021 20:20:42' prior: 50910621!
defaultCatalog
	
	^ Dictionary new
		at: self itemSellByTheStore put: self itemSellByTheStorePrice;
		at: self item2SellByTheStore put: self item2SellByTheStorePrice;
		yourself ! !

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 20:20:47'!
PASSED!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ERMC 6/23/2021 20:33:04'!
validCreditCartNumber
	
	^'012345678912'! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ERMC 6/23/2021 20:34:16'!
validOwner
	
	^'Alan Kay'! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ERMC 6/23/2021 20:35:43'!
validAndNotExpiredMonthOfYear
	
	^ Month month: today year: today  yearNumber  + 1! !
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 20:38:50'!
test10_CanNotCheckoutOfAnInvalidCart
	
	self 
		should: [tusLibros checkoutCartBy: 1 
					    withCreditCardNumber: testObjectsFactory validCreditCartNumber 
					    ownedBy: testObjectsFactory validOwner 
					    expiredDate: testObjectsFactory validAndNotExpiredMonthOfYear] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros invalidCartErrorDescription equals: anError messageText
			]! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 20:38:53'!
ERROR!
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 20:39:21' prior: 50910728!
test10_CanNotCheckoutOfAnInvalidCart
	
	| invalidCartId |
	invalidCartId _ 1. 
	self 
		should: [tusLibros checkoutCartBy: 1 
					    withCreditCardNumber: testObjectsFactory validCreditCartNumber 
					    ownedBy: testObjectsFactory validOwner 
					    expiredDate: testObjectsFactory validAndNotExpiredMonthOfYear] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros invalidCartErrorDescription equals: anError messageText
			]! !
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 20:39:30' prior: 50910748!
test10_CanNotCheckoutOfAnInvalidCart
	
	| invalidCartId |
	invalidCartId _ 1. 
	self 
		should: [tusLibros checkoutCartBy: invalidCartId
					    withCreditCardNumber: testObjectsFactory validCreditCartNumber 
					    ownedBy: testObjectsFactory validOwner 
					    expiredDate: testObjectsFactory validAndNotExpiredMonthOfYear] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros invalidCartErrorDescription equals: anError messageText
			]! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 20:39:32'!
ERROR!

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 20:39:36'!
ERROR!

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 20:39:54'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ERMC 6/23/2021 20:40:12' prior: 50910713!
validCreditCartNumber
	
	^'012345678912'! !
!XXXTest methodsFor: 'setup' stamp: 'ERMC 6/23/2021 20:41:08' prior: 50909422 overrides: 16927572!
setUp
	
	tusLibros _ TusLibros 
		usersAndPasswords: self defaultUsersAndPaswords
		acceptingItemsOf: self defaultCatalog
		registeringOn: self defaultSalesBook.
		
	testObjectsFactory _ StoreTestObjectsFactory new.! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 20:41:13'!
ERROR!

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 20:41:13'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ERMC 6/23/2021 20:45:05' prior: 50910722!
validAndNotExpiredMonthOfYear
	
	^(Month month: today monthIndex year: today yearNumber - 1)! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 20:45:11'!
ERROR!

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 20:45:11'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 20:45:18'!
checkoutCartBy: aSmallInteger withCreditCardNumber: aString ownedBy: aString3 expiredDate: aMonth 
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 20:45:59' prior: 50910829!
checkoutCartBy: anId withCreditCardNumber: aCreditCarNumber ownedBy: anOwner expiredDate: aExpiredDate
 
	! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 21:45:31'!
FAILURE!

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/23/2021 22:03:23'!
Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords catalog salesBook carts shoppingCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibros methodsFor: 'initialization' stamp: 'ERMC 6/23/2021 22:03:21' prior: 50909477!
InitializeWithUsersAndPasswords: XusersAndPasswords acceptingItemsOf: aCatalog registeringOn: aSalesBook

	usersAndPasswords  _ XusersAndPasswords.
	catalog _ aCatalog.
	salesBook _ aSalesBook.
	carts _ Dictionary new.
	
	shoppingCart _ Dictionary new.! !

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/23/2021 22:04:29'!
Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords catalog salesBook carts shoppingCarts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 22:04:29' prior: 50910854!
InitializeWithUsersAndPasswords: XusersAndPasswords acceptingItemsOf: aCatalog registeringOn: aSalesBook

	usersAndPasswords  _ XusersAndPasswords.
	catalog _ aCatalog.
	salesBook _ aSalesBook.
	carts _ Dictionary new.
	
	shoppingCarts _ Dictionary new.! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 22:13:59'!
FAILURE!

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 22:13:59'!
FAILURE!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 22:14:41' prior: 50910836!
checkoutCartBy: anId withCreditCardNumber: aCreditCarNumber ownedBy: anOwner expiredDate: aExpiredDate
 
	^self error: self invalidCartErrorDescription! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 22:14:44'!
ERROR!
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/23/2021 22:14:52'!
invalidCartErrorDescription
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/23/2021 22:15:04' prior: 50910902!
invalidCartErrorDescription
	
	^'ivalid cart Id'! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 22:15:05'!
PASSED!

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 22:15:09'!
PASSED!
!XXXTest methodsFor: 'carts - adding to cart' stamp: 'ERMC 6/23/2021 22:20:12'!
test11_CanNotCheckoutWithAnEmptyCart
	
	| cartId |
	cartId _ tusLibros createCartFor: self validUser withPassword: self validPassword.
	self 
		should: [tusLibros checkoutCartBy: cartId
					    withCreditCardNumber: testObjectsFactory validCreditCartNumber 
					    ownedBy: testObjectsFactory validOwner 
					    expiredDate: testObjectsFactory validAndNotExpiredMonthOfYear] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: tusLibros canNotCheckoutWithAnEmptyCartErrorDescription equals: anError messageText
			]! !

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 22:40:36'!
ERROR!

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 22:40:44'!
ERROR!
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/23/2021 22:40:53'!
canNotCheckoutWithAnEmptyCartErrorDescription
	self shouldBeImplemented.! !
!TusLibros methodsFor: 'errors' stamp: 'ERMC 6/23/2021 22:41:17' prior: 50910944!
canNotCheckoutWithAnEmptyCartErrorDescription
	
	^'can not check out with empty cart'.! !

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 22:41:18'!
FAILURE!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'ERMC 6/23/2021 22:47:21'!
Object subclass: #ShoppingCart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 22:47:09' prior: 50909815!
createCartFor: anUser withPassword: aPassword
	
	| cart shoppingCart |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
		
	cart _ Cart acceptingItemsOf: catalog.
	
	shoppingCart _ ShoppingCart owner: anUser for: self.
	
	carts at: 0 put: cart.
	
	^0 ! !

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 22:47:30'!
ERROR!
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 22:47:44'!
owner: aString for: aTusLibros 
	self shouldBeImplemented.! !
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 22:48:36' prior: 50910982!
owner: anUser for: aTusLibrosSystem 
	
	^self new InitializationWithOwner: anUser for: aTusLibrosSystem.! !

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 22:48:39'!
ERROR!
!ShoppingCart methodsFor: 'initialization' stamp: 'ERMC 6/23/2021 22:48:54'!
InitializationWithOwner: aString for: aTusLibros 
	self shouldBeImplemented.! !

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'ERMC 6/23/2021 22:49:28'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'ERMC 6/23/2021 22:49:30'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'owner system'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'initialization' stamp: 'ERMC 6/23/2021 22:49:26' prior: 50910997!
InitializationWithOwner: anUser for: aTusLibrosSystem
 
	owner _ anUser.
	system _ aTusLibrosSystem.! !

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 22:49:32'!
FAILURE!

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/23/2021 22:51:25'!
Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords catalog salesBook carts shoppingCarts currentCartId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibros methodsFor: 'initialization' stamp: 'ERMC 6/23/2021 22:51:24' prior: 50910874!
InitializeWithUsersAndPasswords: XusersAndPasswords acceptingItemsOf: aCatalog registeringOn: aSalesBook

	usersAndPasswords  _ XusersAndPasswords.
	catalog _ aCatalog.
	salesBook _ aSalesBook.
	carts _ Dictionary new.
	currentCartId _ 0.
	
	shoppingCarts _ Dictionary new.! !
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 22:52:13'!
getCartId 
	
	currentCartId _ currentCartId + 1.
	^currentCartId ! !
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 22:53:12' prior: 50910965!
createCartFor: anUser withPassword: aPassword
	
	| cart shoppingCart cartId |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
		
	cart _ Cart acceptingItemsOf: catalog.
	
	shoppingCart _ ShoppingCart owner: anUser for: self.
	
	cartId _ self getCartId.
	
	carts at: cartId put: cart.
	
	^cartId! !
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 22:53:21' prior: 50911052!
createCartFor: anUser withPassword: aPassword
	
	| cart shoppingCart cartId |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
		
	cart _ Cart acceptingItemsOf: catalog.
	
	shoppingCart _ ShoppingCart owner: anUser for: self.
	
	cartId _ self getCartId.
	carts at: cartId put: cart.
	
	^cartId! !

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 22:53:30'!
PASSED!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 22:53:32'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 22:53:32'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 22:54:08'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 22:54:08'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 22:54:25'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 22:54:25'!
ERROR!

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 22:55:48'!
FAILURE!

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 22:55:48'!
FAILURE!

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 22:55:53'!
PASSED!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 22:55:56'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 22:55:56'!
ERROR!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 22:59:35' prior: 50911067!
createCartFor: anUser withPassword: aPassword
	
	| shoppingCart cartId |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
			
	shoppingCart _ ShoppingCart owner: anUser for: self with: (Cart acceptingItemsOf: catalog).
	
	cartId _ self getCartId.
	carts at: cartId put: shoppingCart.
	
	^cartId! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 22:59:59'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 22:59:59'!
ERROR!
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:00:05'!
owner: aString for: aTusLibros with: aCart 
	self shouldBeImplemented.! !
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:01:19' prior: 50911144!
owner: anUser for: tusLibrosSystem with: aCart 
	
	^self new initializeWithOwner: anUser for: tusLibrosSystem with: aCart.! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:01:21'!
ERROR!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'ERMC 6/23/2021 23:01:27'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'owner system user'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'ERMC 6/23/2021 23:01:27'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'owner system user tusLibrosSystem_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'ERMC 6/23/2021 23:01:27'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'owner system user tusLibrosSystem_CHANGE_ME cart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'initialization' stamp: 'ERMC 6/23/2021 23:01:27'!
initializeWithOwner: anUser for: tusLibrosSystem with: aCart 
	self shouldBeImplemented.
	user := anUser.
	tusLibrosSystem_CHANGE_ME := tusLibrosSystem.
	cart := aCart.! !
!ShoppingCart methodsFor: 'initialization' stamp: 'ERMC 6/23/2021 23:02:38' prior: 50911184!
initializeWithOwner: anUser for: aTusLibrosSystem with: aCart 

	user _ anUser.
	tusLibrosSystem_CHANGE_ME _ aTusLibrosSystem.
	cart _ aCart.! !

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'ERMC 6/23/2021 23:02:46'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'owner system user tusLibros cart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:02:46' prior: 50911193!
initializeWithOwner: anUser for: aTusLibrosSystem with: aCart 

	user _ anUser.
	tusLibros _ aTusLibrosSystem.
	cart _ aCart.! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:02:49'!
ERROR!

!methodRemoval: ShoppingCart class #owner:for: stamp: 'ERMC 6/23/2021 23:03:01'!
owner: anUser for: aTusLibrosSystem 
	
	^self new InitializationWithOwner: anUser for: aTusLibrosSystem.!

!methodRemoval: ShoppingCart #InitializationWithOwner:for: stamp: 'ERMC 6/23/2021 23:03:08'!
InitializationWithOwner: anUser for: aTusLibrosSystem
 
	owner _ anUser.
	system _ aTusLibrosSystem.!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:10:56'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:10:56'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:12:00' prior: 50910583!
listCartById: anId
	
	| cart |
	cart _ carts at: (self getCartId )ifAbsent: [^self error: self invalidBookISBNErrorDescription].
	^cart listItems.

	! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:12:07'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:12:07'!
ERROR!

Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords catalog salesBook shoppingCarts currentCartId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #TusLibros category: 'TusLibros' stamp: 'ERMC 6/23/2021 23:12:22'!
Object subclass: #TusLibros
	instanceVariableNames: 'usersAndPasswords catalog salesBook shoppingCarts currentCartId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:12:28'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:12:28'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:12:44' prior: 50911238!
listCartById: anId
	
	| cart |
	cart _ shoppingCarts at: (self getCartId )ifAbsent: [^self error: self invalidBookISBNErrorDescription].
	^cart listItems.

	! !
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 23:13:07' prior: 50911122!
createCartFor: anUser withPassword: aPassword
	
	| shoppingCart cartId |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
			
	shoppingCart _ ShoppingCart owner: anUser for: self with: (Cart acceptingItemsOf: catalog).
	
	cartId _ self getCartId.
	shoppingCarts at: cartId put: shoppingCart.
	
	^cartId! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:13:10'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:13:10'!
ERROR!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 23:14:00' prior: 50911282!
createCartFor: anUser withPassword: aPassword
	
	| shoppingCart cartId |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
			
	shoppingCart _ ShoppingCart owner: anUser for: self with: (Cart acceptingItemsOf: catalog).
	
	cartId _ self currentCartId.
	shoppingCarts at: cartId put: shoppingCart.
	
	^cartId! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:14:05'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:14:05'!
ERROR!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 23:14:10'!
currentCartId
	self shouldBeImplemented.
	^currentCartId! !
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 23:14:14' prior: 50911325!
currentCartId

	^currentCartId! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:14:16'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:14:50' prior: 50911274!
listCartById: anId
	
	| cart |
	cart _ shoppingCarts at: (self currentCartId) ifAbsent: [^self error: self invalidBookISBNErrorDescription].
	^cart listItems.

	! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:14:52'!
ERROR!
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 23:15:12' prior: 50911304!
createCartFor: anUser withPassword: aPassword
	
	| shoppingCart cartId |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
			
	shoppingCart _ ShoppingCart owner: anUser for: self with: (Cart acceptingItemsOf: catalog).
	
	cartId _ self getCartId .
	shoppingCarts at: cartId put: shoppingCart.
	
	^cartId! !
!TusLibros methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 23:15:14' prior: 50911350!
createCartFor: anUser withPassword: aPassword
	
	| shoppingCart cartId |
	
	(self assertUser: anUser withPasswordValid: aPassword) ifFalse: [^self error: self invalidUserPasswordErrorDescription].
			
	shoppingCart _ ShoppingCart owner: anUser for: self with: (Cart acceptingItemsOf: catalog).
	
	cartId _ self getCartId.
	shoppingCarts at: cartId put: shoppingCart.
	
	^cartId! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:15:18'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:15:18'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:18:44'!
ERROR!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:18:44'!
ERROR!
!ShoppingCart methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 23:18:54'!
listItems
	self shouldBeImplemented.! !
!ShoppingCart methodsFor: 'accesing' stamp: 'ERMC 6/23/2021 23:19:09' prior: 50911393!
listItems
	
	^cart listItems.! !

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:19:11'!
PASSED!

!testRun: #XXXTest #test01_createCartWithValidUserIdAndPassword stamp: 'ERMC 6/23/2021 23:19:14'!
PASSED!

!testRun: #XXXTest #test02_CanNotCreateACartWithInvalidUser stamp: 'ERMC 6/23/2021 23:19:16'!
PASSED!

!testRun: #XXXTest #test03_CanNotCreateACartWithValidUserButIncorrectPassword stamp: 'ERMC 6/23/2021 23:19:18'!
PASSED!

!testRun: #XXXTest #test04_CanNotAddAnItemInACartThatIsNotInTusLibros stamp: 'ERMC 6/23/2021 23:19:20'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/23/2021 23:19:22'!
FAILURE!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/23/2021 23:19:22'!
FAILURE!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/23/2021 23:19:39'!
ERROR!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/23/2021 23:19:39'!
ERROR!

!testRun: #XXXTest #test07_ListingAnEmptyCartReturnsEmptyList stamp: 'ERMC 6/23/2021 23:19:43'!
PASSED!

!testRun: #XXXTest #test08_CanNotListACartItemsOfAnInvalidCartId stamp: 'ERMC 6/23/2021 23:19:45'!
PASSED!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 23:19:47'!
ERROR!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 23:19:47'!
ERROR!
!TusLibros methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:20:26' prior: 50910333!
addTocartId: cartId bookIsbn: anIsbn andQuantity: aQuantity
	
	| cart |
	(self assertId: cartId on: shoppingCarts) ifFalse: [^self error: self canNotAddItemsOfABookToInvalidCartErrorDescription].
	(self assertId: anIsbn on: catalog) ifFalse: [^self error: self invalidBookISBNErrorDescription].
	
	cart _ shoppingCarts at: cartId. 
		
	cart add: aQuantity of: anIsbn.
	
	^cart
	
	 
! !

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/23/2021 23:20:27'!
PASSED!

!testRun: #XXXTest #test05_CanNotAddItemThatIsNotInTheEditorialISBN stamp: 'ERMC 6/23/2021 23:20:30'!
PASSED!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/23/2021 23:20:32'!
ERROR!

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/23/2021 23:20:32'!
ERROR!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:20:53'!
add: aSmallInteger of: aString 
	self shouldBeImplemented.! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/23/2021 23:21:23' prior: 50911474!
add: aQuantity of: aBook 
	
	cart add: aQuantity of: aBook.! !

!testRun: #XXXTest #test06_CanAdddItemsToAValidCartCreated stamp: 'ERMC 6/23/2021 23:21:25'!
PASSED!

!testRun: #XXXTest #test07_ListingAnEmptyCartReturnsEmptyList stamp: 'ERMC 6/23/2021 23:21:27'!
PASSED!

!testRun: #XXXTest #test08_CanNotListACartItemsOfAnInvalidCartId stamp: 'ERMC 6/23/2021 23:21:29'!
PASSED!

!testRun: #XXXTest #test09_ListingCartOfValidCartIdReturnsCorrectItems stamp: 'ERMC 6/23/2021 23:21:30'!
PASSED!

!testRun: #XXXTest #test10_CanNotCheckoutOfAnInvalidCart stamp: 'ERMC 6/23/2021 23:21:32'!
PASSED!

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 23:21:34'!
FAILURE!

!testRun: #XXXTest #test11_CanNotCheckoutWithAnEmptyCart stamp: 'ERMC 6/23/2021 23:21:34'!
FAILURE!

!classRenamed: #XXXTest as: #TusLibrosSystemTests stamp: 'ERMC 6/23/2021 23:22:47'!
Smalltalk renameClassNamed: #XXXTest as: #TusLibrosSystemTests!